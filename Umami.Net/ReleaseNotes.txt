0.2.0
Adds new Identify endpoints. 
These can be used on user signin to identify the user.
Task<HttpResponseMessage> Identify(string? email =null, string? username = null, 
            string? sessionId = null, string? userId=null, UmamiEventData? eventData = null)
            
Task<HttpResponseMessage> Identify(UmamiPayload payload, UmamiEventData? eventData = null)

 Task<HttpResponseMessage> IdentifySession(string sessionId);
 
 The same endpoints exist in the UmamiClient and UmamiBackgroundSender
 
 Adds new UmamiData service. This service can fetch data from the Umami API.
 
 The UmamiDataService has the following methods:
 async Task<UmamiResult<MetricsResponseModels[]>> GetMetrics(MetricsRequest metricsRequest)
  async Task<UmamiResult<PageViewsResponseModel>> GetPageViews(DateTime startDate, DateTime endDate,
         Unit unit = Unit.Day)
  
  async Task<UmamiResult<PageViewsResponseModel>> GetPageViews(PageViewsRequest pageViewsRequest)
  
  async Task<UmamiResult<StatsResponseModels>> GetStats(StatsRequest statsRequest)
  
   Task<UmamiResult<StatsResponseModels>> GetStats(DateTime startDate, DateTime endDate)
   
   For more information see the ReadMe.  
   
0.2.1
Update readme, adds new ActiveUsers endpoint to the UmamiDataService.     

0.3.1
Adds new IdentifyAndDecode endpoints which return a decoded response.
These can be used to provide information about a user (without a cookie) 

Adds multiple Decode endpoints which return a decoded response.

0.4.0 
Adds new ability to specify the default UserAgent for the UmamiClient. This is used to avoid the IsBot detection in Umami.
Adds new Status for the UmamiDataResponse, this will tell you if a request has been identified as a bot.

0.4.1
Fixes a bug in the UmamiBackgroundSender where the Original UserAgent was not being set correctly.
Adds tests for the UmamiBackgroundSender.