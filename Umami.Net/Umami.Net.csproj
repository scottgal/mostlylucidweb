<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <LangVersion>12</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <IsPackable>true</IsPackable>
        <PackageId>Umami.Net</PackageId>
        <Authors>Scott Galloway</Authors>
        <PackageIcon>icon.png</PackageIcon>
        <RepositoryUrl>https://github.com/scottgal/mostlylucidweb/tree/main/Umami.Net</RepositoryUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageTags>web</PackageTags>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <Description>
            Adds a simple Umami endpoint to your ASP.NET Core application.
        </Description>
        <PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/ReleaseNotes.txt"))</PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0"/>
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="8.0.2"/>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0"/>
        <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0"/>
        <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="8.0.8"/>
        <PackageReference Include="MinVer" Version="6.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="NodaTime" Version="3.1.11"/>
        <PackageReference Include="Polly" Version="8.4.1"/>
        <PackageReference Include="Polly.Contrib.WaitAndRetry" Version="1.1.1"/>
        <PackageReference Include="Polly.Extensions.Http" Version="3.0.0"/>
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.0.2"/>
    </ItemGroup>
    <PropertyGroup>
        <MinVerTagPrefix>v</MinVerTagPrefix>
    </PropertyGroup>
    <PropertyGroup>
        <MinVerSkip Condition="'$(Configuration)' == 'Debug'">true</MinVerSkip>
    </PropertyGroup>
    <ItemGroup>
        <Content Update="icon.png">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <Content Update="smalllogo.svg">
            <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <None Remove="ReleaseNotes.txt"/>
        <Content Include="ReleaseNotes.txt">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <None Include=".\icon.png" Pack="true" PackagePath="">
            <Link>Properties\icon.png</Link>
        </None>
        <None Include=".\README.md" Pack="true" PackagePath="">
            <Link>Properties\README.md</Link>
        </None>
    </ItemGroup>
    <ItemGroup>
        <FrameworkReference Include="Microsoft.AspNetCore.App"/>
    </ItemGroup>

    <!--    <Target Name="NugetPackAutoVersioning" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">-->
    <!--        &lt;!&ndash; Delete the contents of the target directory &ndash;&gt;-->
    <!--        <RemoveDir Directories="$(SolutionDir)nuget" />-->
    <!--        &lt;!&ndash; Recreate the target directory &ndash;&gt;-->
    <!--        <MakeDir Directories="$(SolutionDir)nuget" />-->
    <!--        &lt;!&ndash; Run the dotnet pack command &ndash;&gt;-->
    <!--        <Exec Command="dotnet pack -p:PackageVersion=$([System.DateTime]::Now.ToString(&quot;yyyy.MM.dd.HHmm&quot;))-preview -p:V &#45;&#45;no-build &#45;&#45;configuration $(Configuration) &#45;&#45;output &quot;$(SolutionDir)nuget&quot;" />-->
    <!--        <Exec Command="dotnet nuget push $(SolutionDir)nuget\*.nupkg &#45;&#45;source Local" />-->
    <!--        <Exec Command="del /f /s /q $(SolutionDir)nuget\*.nupkg" />-->
    <!--    </Target>-->
</Project>